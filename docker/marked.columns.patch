diff --git a/lib/marked.js b/lib/marked.js
index 9f1584b..14a809a 100644
--- a/lib/marked.js
+++ b/lib/marked.js
@@ -24,7 +24,8 @@ var block = {
   def: /^ *\[([^\]]+)\]: *<?([^\s>]+)>?(?: +["(]([^\n]+)[")])? *(?:\n+|$)/,
   table: noop,
   paragraph: /^((?:[^\n]+\n?(?!hr|heading|lheading|blockquote|tag|def))+)\n*/,
-  text: /^[^\n]+/
+  text: /^[^\n]+/,
+  columns: /^<\|((?:(?!\|>\n)(.*\n?)*))\|>/
 };
 
 block.bullet = /(?:[*+-]|\d+\.)/;
@@ -411,6 +412,20 @@ Lexer.prototype.token = function(src, top, bq) {
       continue;
     }
 
+    // columns
+    if (cap = this.rules.columns.exec(src)) {
+      src = src.substring(cap[0].length);
+      var columns = cap[1].trim();
+      this.tokens.push({
+        type: 'columns',
+        columns: columns.split(/\n%[^\n]*\n/).map(function (s) {
+          return s.replace('\\(%[^\n]*\n)', '$1');
+        }),
+      });
+      continue;
+    }
+
+
     // top-level paragraph
     if (top && (cap = this.rules.paragraph.exec(src))) {
       src = src.substring(cap[0].length);
@@ -818,6 +833,16 @@ Renderer.prototype.listitem = function(text) {
   return '<li>' + text + '</li>\n';
 };
 
+Renderer.prototype.columns = function (cols) {
+  var len = Math.floor(100 / cols.length);
+  return '<div style="margin:0px auto; width:100%">'
+    + cols.reduce(function (a, s) {
+      return a + '<div style="float: left; margin:0px auto; width:' + len + '%">'
+               + s
+               + '</div>';
+    }, '') + '</div>';
+}
+
 Renderer.prototype.paragraph = function(text) {
   return '<p>' + text + '</p>\n';
 };
@@ -1074,6 +1099,11 @@ Parser.prototype.tok = function() {
     case 'paragraph': {
       return this.renderer.paragraph(this.inline.output(this.token.text));
     }
+    case 'columns': {
+      return this.renderer.columns(
+        this.token.columns.map(function (s) { return marked(s); })
+      );
+    }
     case 'text': {
       return this.renderer.paragraph(this.parseText());
     }
